name: OpenPlotter-HALPI CI/Release Build

run-name: |
  ${{ github.event_name == 'push' && format('ðŸŒ± Push build - {0}', github.event.head_commit.message) || '' }}
  ${{ github.event_name == 'pull_request' && format('ðŸ‘· PR #{0} build - {1}', github.event.pull_request.number, github.event.pull_request.title) || '' }}
  ${{ github.event_name == 'repository_dispatch' && 'ðŸš€ Triggered OpenPlotter build' || '' }}
  ${{ github.event_name == 'workflow_dispatch' && 'ðŸš€ Manual triggered OpenPlotter build' || '' }}

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
  repository_dispatch:
    types: [ ophalpi_push ]

env:
  PLATFORM: bookworm

jobs:
  image-builder:
    name: "OpenPlotter-HALPI (${{ matrix.pi-gen.architecture }})"
    runs-on: ubuntu-latest-m
    strategy:
      fail-fast: false
      matrix:
        pi-gen: [
          { branch: arm64,  architecture: arm64 }
        ]

    steps:
      - name: â¬‡ Checkout OpenPlotter-HALPI
        uses: actions/checkout@v4

      - name: â¬‡ Checkout pi-gen
        uses: actions/checkout@v4
        with:
          repository: RPi-Distro/pi-gen
          ref: ${{ matrix.pi-gen.branch }}
          path: pi-gen

      - name: ðŸ”§ Prepare
        run: |
          sudo apt-get update && sudo apt-get install -y coreutils quilt parted qemu-utils qemu-user-static debootstrap zerofree zip dosfstools libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc kmod kpartx arch-test xxd pigz
          echo "OPENPLOTTER=OpenPlotter-HALPI-${{ env.PLATFORM }}-${{ matrix.pi-gen.architecture }}" >> $GITHUB_ENV

      - name: ðŸ‘· Build
        run: |
          cp -R stage-openplotter pi-gen/
          cp -R stage-halpi pi-gen/
          touch pi-gen/stage5/SKIP
          touch pi-gen/stage{2,4,-openplotter}/SKIP_IMAGES
          touch pi-gen/stage-halpi/EXPORT_IMAGE
          cp config pi-gen/ && cd pi-gen
          echo "RELEASE='${{ env.PLATFORM }}'" >> "./config"
          sudo IMG_FILENAME=${{ env.OPENPLOTTER }} ARCHIVE_FILENAME=${{ env.OPENPLOTTER }} ./build.sh

      - name: ðŸ“¦ Upload
        if: ${{ github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch' || github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OPENPLOTTER }}
          path: pi-gen/deploy/*.zip
          retention-days: 1


#####################################
###### Publish GitHub Releases ######
#####################################

  github_publish:
    name: ðŸš€ Publish GitHub Releases
    if: ${{ github.event_name == 'repository_dispatch' || github.event_name == 'workflow_dispatch' }}
    needs: [ image-builder ]
    runs-on: ubuntu-latest
    steps:
      - name: â¬‡ Checkout OpenPlotter-HALPI
        uses: actions/checkout@v4

      - name: ðŸ”§ Prepare
        id: read_template
        shell: bash
        run: |
          TEMPLATE=$(cat ./.github/workflows/template.md)
          TEMPLATE="${TEMPLATE//'%'/'%25'}"
          TEMPLATE="${TEMPLATE//$'\n'/'%0A'}"
          TEMPLATE="${TEMPLATE//$'\r'/'%0D'}"
          echo "RELEASE_BODY=$TEMPLATE" >> "$GITHUB_OUTPUT"

      - name: ðŸ’¾ Artifact download
        uses: actions/download-artifact@v4.1.8
        with:
          pattern: OpenPlotter-HALPI-*
          path: all-artifacts
          merge-multiple: true

      #- name: Delete previous OpenPlotter-HALPI Release
      #  uses: dev-drprasad/delete-older-releases@v0.3.4
      #  with:
      #    keep_latest: 0
      #    delete_tags: true
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release and upload image
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: all-artifacts/*
          tag: OpenPlotter-HALPI
          release_name: OpenPlotter-HALPI
          overwrite: true
          body: |
            ${{ steps.read_template.outputs.RELEASE_BODY }}
